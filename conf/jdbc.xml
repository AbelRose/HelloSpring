<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

<!--    &lt;!&ndash; 通过db.properties 设置 &ndash;&gt;-->
<!--    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
<!--        <property name="location" value="db.properties"></property>-->
<!--    </bean>-->

    <!-- 引入文件属性 -->
    <!-- 等价于 PropertyPlaceholderConfigurer 这种比较简单 -->
    <context:property-placeholder location="db.properties"></context:property-placeholder>

    <!-- 创建数据源 -->
    <!-- 通过 PropertyPlaceholderConfigurer 设置 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
<!--        <property name="driverClassName" value=""></property>-->
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- 通过数据源配置JdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
</beans>