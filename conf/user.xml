<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
		<context:component-scan>:扫描组件，对设置的包下面的类进行扫苗，会将加上注解的类作为spring的组件进行加载
		组件：指spring中管理的bean
		作为spring的组件进行加载：会自动在spring的配置文件中生成相对应的bean，这些bean的id会以类的首字母小写为值

		<context:include-filter>:在设定的包结构下，再次通过注解或类型具体包含到某个或某几个类
		注意：在使用包含时，一定要设置use-default-filters="false"，将默认的过滤（即扫描包下所有的类）关闭

		<context:exclude-filter>:在设定的包结构下，再次通过注解或类型排除某个或某几个类
		注意：在使用排除时，一定要设置use-default-filters="true"，将默认的过滤（即扫描包下所有的类）打开
		切记：一个<context:component-scan>中可以出现多个include，也可以同时出现多个exclude，但是两个不能同时出现
	 -->
    <context:component-scan base-package="com.matrix.spring.day02.ioc.userMod" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> <!-- 需要在上面配置一个都不扫描use-default-filters="false" 只扫描的包是按照注解进行扫描 后面的expression是注解的路径-->
        <context:include-filter type="assignable" expression="com.matrix.spring.day02.ioc.userMod.service.impl.UserServiceImpl"/> <!-- assignable 可以看作是类的类型 expression 是全限定名-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
<!--        &lt;!&ndash; 排除 &ndash;&gt;-->
<!--        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/> &lt;!&ndash; use-default-filters="false" 这个已更改设置成 true  全部扫描&ndash;&gt;-->
<!--        <context:exclude-filter type="assignable" expression="com.matrix.spring.day02.ioc.userMod.dao.impl.UserDaoImpl"/> -->
    </context:component-scan>

    <!-- 相当于如下配置 -->
<!--    <bean id="userController" class="com.matrix.spring.day02.ioc.userMod.controller.UserController"></bean>-->
<!--    <bean id="userServiceImpl" class="com.matrix.spring.day02.ioc.userMod.service.impl.UserServiceImpl"></bean>-->
<!--    <bean id="userDaoImpl" class="com.matrix.spring.day02.ioc.userMod.dao.impl.UserDaoImpl"></bean>-->

</beans>